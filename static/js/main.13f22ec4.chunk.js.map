{"version":3,"sources":["features/activity-card/ActivityCard.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["socials","Object","freeze","title","path","icon","SvgIcon","d","LinkedButton","pathname","children","Button","component","RouterLink","to","target","variant","color","size","startIcon","withStyles","theme","createStyles","root","minHeight","justifyContent","alignItems","display","flexDirection","padding","spacing","breakpoints","down","paper","maxWidth","width","boxShadow","shadows","overflow","background","justifyItems","height","cardContent","paddingBottom","margin","imageContent","backgroundSize","backgroundRepeat","backgroundImage","backgroundPosition","up","classes","className","CssBaseline","Fade","in","timeout","Paper","Grid","container","direction","justify","item","xs","md","Typography","map","k","v","App","store","configureStore","reducer","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","blue","secondary","main","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13f22ec4.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    createStyles,\n    CssBaseline,\n    Fade,\n    Grid,\n    Paper,\n    SvgIcon,\n    Theme,\n    withStyles,\n    WithStyles\n} from \"@material-ui/core\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = (theme: Theme) => createStyles({\n    root : {\n        minHeight: '100vh',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2),\n        [theme.breakpoints.down('xs')]: {\n            padding: theme.spacing(1),\n        },\n    },\n    paper: {\n        maxWidth: '1040px',\n        width: '100%',\n        boxShadow: theme.shadows[12],\n        overflow: 'hidden',\n        background: 'linear-gradient(45deg, #000000 0%, rgba(0,0,0,0.761) 100%)',\n        '& > *': {\n            display: 'flex',\n            justifyItems: 'center',\n            height: '100%'\n        },\n    },\n    cardContent: {\n        padding: theme.spacing(10),\n        [theme.breakpoints.down('xs')]: {\n            padding: `${theme.spacing(3)}px ${theme.spacing(3)}px`,\n        },\n        lineHeight: '2rem',\n        '& > p': {\n            paddingBottom: '2rem'\n        },\n        '& > a': {\n            margin: '1.2rem 1.2rem 0px 0px'\n        }\n    },\n    imageContent: {\n        minHeight: '20rem',\n        overflow: 'hidden',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: 'url(profile.jpg)',\n        backgroundPosition: 'left',\n        [theme.breakpoints.up('md')]: {\n            backgroundPosition: '-160px',\n        },\n        [theme.breakpoints.down('xs')]: {\n            backgroundPosition: '-110px',\n        }\n    }\n\n});\n\nconst socials = Object.freeze([\n    {\n        title: 'GitHub',\n        path: 'https://github.com/christopher-alexander',\n        icon: <SvgIcon>\n            <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n        </SvgIcon>\n    },\n    {\n        title: 'LinkedIn',\n        path: 'https://www.linkedin.com/in/calexanderc/',\n        icon: <SvgIcon>\n            <path d=\"M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14m-.5 15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 1.69 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z\" />\n        </SvgIcon>\n    },\n    {\n        title: 'StackOverflow',\n        path: 'https://stackoverflow.com/users/5346656',\n        icon: <SvgIcon>\n            <path d=\"M17.36 20.2v-5.38h1.79V22H3v-7.18h1.8v5.38h12.56M6.77 14.32l.37-1.76l8.79 1.85l-.37 1.76l-8.79-1.85m1.16-4.21l.76-1.61l8.14 3.78l-.76 1.62l-8.14-3.79m2.26-3.99l1.15-1.38l6.9 5.76l-1.15 1.37l-6.9-5.75m4.45-4.25L20 9.08l-1.44 1.07l-5.36-7.21l1.44-1.07M6.59 18.41v-1.8h8.98v1.8H6.59z\"/>\n        </SvgIcon>\n    }\n]);\n\nconst LinkedButton = ({pathname, icon, children} : any) => (\n    <Button component={RouterLink}\n            to={{pathname: pathname}}\n            target=\"_blank\"\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"medium\"\n            startIcon={icon}>{children}</Button>\n);\n\nconst ActivityCard = ({classes} : WithStyles<typeof styles>) => {\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Fade in={true} timeout={750}>\n                <Paper className={classes.paper}>\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\n\n                        <Grid className={classes.imageContent} item xs={12} md={5}/>\n\n                        <Grid className={classes.cardContent} item xs={12} md={7}>\n\n                            <Typography color={'primary'} component='p' variant=\"h4\">\n                                <b>CHRISTOPHER ALEXANDER</b>\n                            </Typography>\n\n                            <Typography color={'primary'}><b>Full stack developer</b> with demonstrated team leadership abilities\n                                experienced in providing quality user applications through the\n                                implementation of accepted coding standards and advanced interface design</Typography>\n                            {\n                                socials.map((k,v) =>\n                                    <LinkedButton key={k.title} pathname={k.path} icon={k.icon}>{k.title}</LinkedButton>)\n                            }\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Fade>\n        </div>\n    )\n};\n\n/* style={{ transitionDelay: '1000ms'}}> */\n\nexport default withStyles(styles)(ActivityCard)\n","import React from 'react';\r\nimport './App.css';\r\nimport ActivityCard from \"./features/activity-card/ActivityCard\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (<BrowserRouter><ActivityCard/></BrowserRouter>);\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\n// import counterReducer from '../features/counter/counterSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    // counter: counterReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {ThemeProvider} from \"@material-ui/core\";\r\nimport {createMuiTheme} from \"@material-ui/core/styles\";\r\nimport {blue} from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: {\r\n            main: '#40c4ff',\r\n        },\r\n    },\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <ThemeProvider theme={theme}>\r\n                <App />\r\n            </ThemeProvider>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}